plugins {
	id 'fabric-loom' version '1.10-SNAPSHOT'
	id 'maven-publish'
	id "me.modmuss50.mod-publish-plugin" version "0.7.4"
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name + '-' + project.minecraft_version
}

repositories {
	maven { url 'https://maven.nucleoid.xyz' }
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	include modImplementation("xyz.nucleoid:server-translations-api:${project.server_translations_version}")
}

loom {
	runs {
		gametest {
			inherit server
			name "Game Test"
			vmArg "-Dfabric-api.gametest"
			vmArg "-Dfabric-api.gametest.report-file=${project.layout.buildDirectory.get()}/junit.xml"
			runDir "build/gametest"
		}
	}
}
test.dependsOn runGametest

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

publishMods {
	file = remapJar.archiveFile
	displayName = "No Portals ${mod_version} for ${minecraft_version}"
	changelog = rootProject.file("CHANGELOG.md").text
	type = STABLE
	modLoaders.add("fabric")

	curseforge {
		projectId = "782514"
		projectSlug = "no-portals" // Required for discord webhook
		accessToken = providers.environmentVariable("CURSEFORGE_TOKEN")
		minecraftVersionRange {
			start = "1.21.5"
			end = "1.21.5"
		}
		requires("fabric-api")
	}
	modrinth {
		projectId = "ZzkyvOit"
		accessToken = providers.environmentVariable("MODRINTH_TOKEN")
		minecraftVersionRange {
			start = "1.21.5"
			end = "1.21.5"
		}
	}
	github {
		repository = "kevinthegreat1/NoPortals-Fabric"
		accessToken = providers.environmentVariable("GITHUB_TOKEN")
		commitish = "main"
	}
}
